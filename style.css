html {
    --ns-yellow: #ffc917;
    --ns-blue: #003082;
    --ns-light-blue: #0063d3;
    --ns-light-blue-2: #D9ECF7;
    
    --ns-white: #ffffff;
    --ns-grey: #070721;
    --ns-grey-10: #202037;
    --ns-grey-20: #39394D;
    --ns-grey-30: #515164;
    --ns-grey-40: #6a6a7a;
    --ns-grey-50: #838390;
    --ns-grey-60: #9c9ca6;
    --ns-grey-70: #b5b5bc;
    --ns-grey-80: #cdcdd3;
    --ns-grey-90: #e6e6e9;
    --ns-grey-94: #f0f0f2;
    
    --ns-red-alert: #db0029;
    --ns-green: #009a42;
    --ns-ovchip: #ff0098;
    --ns-ovorange: #ff7700;
    
    --ns-light-blue-text: #0079d3;
    --ns-light-blue-hover: #005ca0;
    --ns-yellow-2: #ffb519;
    
    --ns-grey-alpha-60: #070721 (60%);
    --ns-grey-alpha-15 : #070721 (15%);
    --ns-grey-alpha-10 : #070721 (10%);
    
    --ns-max-width: 1200px;
    --ns-border-radius: .25em;
}

@font-face {
    font-family: 'inter';
    src: url(./resources/Inter-VariableFont_opsz\,wght.ttf) format(truetype);
}

@font-face {
    font-family: 'inter';
    src: url(./resources/Inter-Italic-VariableFont_opsz\,wght.ttf) format(truetype);
    font-style: italic;
}
* {
    margin: 0;
    padding: 0;
    font-family: 'inter';
}

body{
display: flex;
align-items: center;
justify-content: center;
flex-direction: column;
background: var(--ns-grey-90);
}
/* https://www.marcbacon.com/tools/clamp-calculator/ CLAMP CALC */

/* Heading XXL */
h1,h2,h3 {
    color:  var(--ns-blue);
    font-weight: 400;
}
h1 {
    font-size: clamp(2.25rem, 0.485rem + 4.412vw, 3rem);
    line-height: 1.25;
    padding-bottom: 0.25em;
}

/* Heading XL */
h2 {
    font-size: clamp(2rem, 1.118rem + 2.206vw, 2.375rem);
    line-height: 1.185;
}

/* Heading L */
h3 {
    font-size: clamp(1.75rem, 1.456rem + 0.735vw, 1.875rem);
    line-height: 1.35; 
}

/* Heading M */
h4 {
    font-size: clamp(1.25rem, 0.662rem + 1.471vw, 1.5rem);
    line-height: 1.25; 
}

/* Heading S */
h5, legend {
    font-size: clamp(1.125rem, 0.831rem + 0.735vw, 1.25rem);
    line-height: 1.25; 
    padding-bottom: .5em;
}

/* Heading XS */
h6 {
    font-size: clamp(1rem, 0.706rem + 0.735vw, 1.125rem);
    line-height: 1.4; 
}

/* default text */
P {
    font-size: 1em;
    line-height: 1.55;
}

form p {
    display: flex;
    padding-bottom: 1em;
}

a {
    color: var(--ns-light-blue)
}

a:hover {
    color: var(--ns-blue)
}

/* small text  Sanne is fan!*/
small {
    font-size:0.875em;
    line-height: 1.4;
}

header {
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center; 
    width: 100%;
    padding: .5em 0;
    max-width: var(--ns-max-width);
    background: var(--ns-yellow);
    font-weight: 500;
    margin: 1em 0;
    border-radius: var(--ns-border-radius);
}

section {
    width: 96%;
    max-width: var(--ns-max-width);
    box-sizing: border-box;
    background: var(--ns-white);
    padding: 2em;
    
}

span{
    color: var(--ns-red-alert);
}

form {
    width: 96%;
    box-sizing: border-box;
    max-width: var(--ns-max-width);
}

fieldset {
    margin-top: 1em;
    padding: 2em 2em 1em 2em;
    border:none;
    border-radius: var(--ns-border-radius);
    background: var(--ns-white);
}

fieldset > fieldset {
    padding: 0;
    margin-top: 0;
}

legend {
    display: block;
    margin-left:-1.5em;
    width: 100%;
    padding: 1em;
    background:var(--ns-white);
}
label{
    display: inline-block;
    width: 18em;
}
input {
    width: 50%;
    flex-grow: 1;
    padding: 1em;
    margin-bottom: 1em;
    border: 1px solid var(--ns-grey-20);
    border-radius: var(--ns-border-radius)
}

.intro div {
    display: flex;
    gap: 1em;
}

input[type=submit] {
    background: var(--ns-light-blue);
    padding: 1em 1.5em;
    border-radius: 0.3em;
    color: var(--ns-white);
    font-weight: 400;
    font-size: 1em;
    
}

.tip{
    display: flex;
    align-items: center;
    
    background:var(--ns-light-blue-2) 50%;
    padding: .5em 1em;
    border-left: 8px solid var(--ns-blue);
    border-radius: calc(var(--ns-border-radius) * 2);
    margin-top: 1em;
}

.tip p{
    padding: 0;
}

/* Bijna elke input in dit formulier is required dus dit is niet de beste methode omdat dan alles een * krijgt maar ik wilde testen of dit werkt */
label:has(+ input:required)::after{
    content: " *";
    color: var(--ns-red-alert); 
}